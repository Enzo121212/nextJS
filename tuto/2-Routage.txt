

___________PAGE______________

- Le dossier designe le routage
- Dans le dossier il n'y a que :page.js ou layout.js ou template.js
- Layout.js ou il y  a la mise en page 
- Dans layout.js;  le children desing le contenu dans le page.js
- template.js est defini entre layout et page
- Ordre:
    1. layout.js
    2. template.js
    3. page.js
- Titre sur le head se trouve dans layout.js dans le metadata

NB:seule dans app/layout.js peut faire la balise html et body


______________LINK & NAVIGATION ______________

- Link est comme la balise a(ex <a href="#"> </a>)
- import Link from 'next/link'
- <Link href='/dashboard'>Dashboard </Link>
- Possible par button en appliquant:
    
    import { usePathname , useRouter } from 'next/navigation'
    const router = useRouter()
    <button onClick={()=>router.push('/jeux')}> JEUX</button>

______________GROUPE ROUTE_______________________
- on peut mettre le groupe routage mais on met entre parenthese
    exemple = 
        app/(produit)/listProduit/page.js => (/listProduit)
        app/(produit)/listProduitValider/page.js => (/listProduitValider)

- on peut  mettre crochet si on sais pas encore le dossier
    app/contact/[slug] => (/contact/nimportquoi)
    app/contact/[...slug] => (/contact/nimportquoi/nimportquoi/nimportquio)


_______________LOADING_________________________________
A revoir
app/contact/loading.js


______________GESTION ERREUR__________________________
A revoir
app/contact/error.js

__________________ROUTE PARRALLEE___________________
- mettre plusieurs page dans la meme mise en page
- afficher par exemple page produit et la page user dans la page contact
- ils sont nomme par @ (@folder)
- /app/@produit/page.js 
- celle ci sera gerer dans layout.js

- Dans la layout ce sera 
    export default function Layout({children,apropos,projet}){
    return (
        {children}
        {apropos}
        {projet}
 
 -Redemarrer le server